import pytest
import numpy as np
from src.indexing import Embedder

@pytest.fixture(scope="module")
def embedder() -> Embedder:
    """
    –§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Embedder –æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ –º–æ–¥—É–ª—å.

    Returns:
        Embedder: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Embedder.
    """
    return Embedder()

def test_embedder_shape(embedder: Embedder) -> None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ encode –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤.

    Args:
        embedder (Embedder): –≠–∫–∑–µ–º–ø–ª—è—Ä Embedder.
    """
    texts = [
        "–ü—Ä–∏–º–µ—Ä –ø–µ—Ä–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.",
        "–í—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç, —Ç–æ–∂–µ –ø–æ-—Ä—É—Å—Å–∫–∏."
    ]
    embeddings = embedder.encode(texts)
    assert isinstance(embeddings, np.ndarray)
    assert embeddings.shape[0] == len(texts)
    assert embeddings.shape[1] > 0  

def test_embedder_empty_list(embedder: Embedder) -> None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø—Ä–∏ –ø—É—Å—Ç–æ–º —Å–ø–∏—Å–∫–µ —Ç–µ–∫—Å—Ç–æ–≤ encode –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ñ–æ—Ä–º—ã (0, embedding_dim).

    Args:
        embedder (Embedder): –≠–∫–∑–µ–º–ø–ª—è—Ä Embedder.
    """
    embeddings = embedder.encode([])
    assert isinstance(embeddings, np.ndarray)
    assert embeddings.shape[0] == 0

def test_embedder_unicode_support(embedder: Embedder) -> None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É Unicode: —Ä—É—Å—Å–∫–∏–π, emoji, –∫–∏—Ç–∞–π—Å–∫–∏–π.

    Args:
        embedder (Embedder): –≠–∫–∑–µ–º–ø–ª—è—Ä Embedder.
    """
    texts = ["—Ç–µ—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º", "emoji üòÄ", "–∫–∏—Ç–∞–π—Å–∫–∏–π ‰∏≠Êñá"]
    embeddings = embedder.encode(texts)
    assert embeddings.shape[0] == len(texts)
    assert not np.isnan(embeddings).any()  

def test_embedder_repeatability(embedder: Embedder) -> None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å: –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –¥–∞–≤–∞—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —ç–º–±–µ–¥–¥–∏–Ω–≥.

    Args:
        embedder (Embedder): –≠–∫–∑–µ–º–ø–ª—è—Ä Embedder.
    """
    text = ["–û–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ç–µ–∫—Å—Ç."] * 2
    embeddings = embedder.encode(text)
    np.testing.assert_allclose(embeddings[0], embeddings[1], rtol=1e-5, atol=1e-6)
